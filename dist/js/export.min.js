"use strict";const i18n=require("./i18n.min"),{remote:remote}=require("electron"),Store=require("electron-store"),store=new Store,dialog=remote.dialog,marked=require("marked"),removeMarkdown=require("remove-markdown"),pretty=require("pretty"),fs=require("fs-extra"),log=require("electron-log");exports.exportNote=function(e){const t=store.get("exportPath");dialog.showSaveDialog(remote.getCurrentWindow(),{defaultPath:`${t}/${e.title}`,buttonLabel:i18n.t("app:dialog.button.export","Export Note"),properties:["openDirectory","createDirectory"],filters:[{name:i18n.t("app:dialog.format.html","html"),extensions:["html"]},{name:i18n.t("app:dialog.format.md","markdown"),extensions:["md"]},{name:i18n.t("app:dialog.format.txt","text"),extensions:["txt"]}]}).then(t=>{!1===t.canceled&&function(t){let o,r;switch(t.split(".").pop()){case"html":let t=marked(e.content);o=pretty(`<!doctype html><html lang="${i18n.language}"><head><meta charset="utf-8" /><title>${e.title}</title></head><body>${t}</body></html>`,{ocd:!0}),r="html";break;case"txt":o=removeMarkdown(e.content),r="text";break;default:o=e.content,r="markdown"}fs.outputFile(t,o).then(()=>fs.readFile(t,"utf8")).then(t=>{new Notification("Nextcloud Notes Client",{body:i18n.t("app:notification.export.text","The note {{title}} has been exported as {{filetype}}",{title:e.title,filetype:r})})}).catch(e=>{log.error(e)})}(t.filePath)})};
//# sourceMappingURL=maps/export.min.js.map
