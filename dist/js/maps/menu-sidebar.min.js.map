{"version":3,"sources":["menu-sidebar.js"],"names":["i18n","require","electron","app","BrowserWindow","Menu","MenuItem","ipc","ipcMain","Store","store","on","event","message","sidebarMenuTemplate","favorite","noCategory","catID","label","t","[object Object]","item","focusedWindow","webContents","send","id","type","checked","submenu","push","category","get","status","enabled","sidebarMenu","buildFromTemplate","win","fromWebContents","sender","popup"],"mappings":"AAAA,aAEA,IAAIA,KAAOC,QAAQ,cACnB,MAAMC,SAAWD,QAAS,aACpBE,IAAEA,KAAQF,QAAS,YACnBG,cAAgBF,SAASE,cACzBC,KAAOH,SAASG,KAChBC,SAAWJ,SAASI,SACpBC,IAAML,SAASM,QAEfC,MAAQR,QAAS,kBACjBS,MAAQ,IAAID,MAIlBF,IAAII,GAAG,oBAAqB,CAAEC,EAAOC,KAEpC,IAAIC,EAEJ,GAAID,EAAS,CAEZ,IAAIE,EAAgC,QAApBF,EAAQE,SACvBC,EAA+B,YAAjBH,EAAQI,OAEvBH,EAAsB,CACrB,CACCI,MAAOlB,KAAKmB,EAAE,qBAAsB,UACpCC,MAAOC,EAAMC,GAAoBA,GAAeA,EAAcC,YAAYC,KAAK,iBAAkBX,EAAQY,MAE1G,CACCC,KAAM,aAEP,CACCR,MAAOlB,KAAKmB,EAAE,uBAAwB,YACtCO,KAAM,WACNC,QAASZ,EACTK,MAAOC,EAAMC,GAAoBA,GAAeA,EAAcC,YAAYC,KAAK,mBAAoBX,KAEpG,CACCK,MAAOlB,KAAKmB,EAAE,qBAAsB,aAAe,IACnDC,MAAOC,EAAMC,GAAoBA,GAAeA,EAAcC,YAAYC,KAAK,iBAAkBX,EAAQY,MAE1G,CACCC,KAAM,aAEP,CACCR,MAAOlB,KAAKmB,EAAE,mBAAoB,WAClCS,QAAS,IAEV,CACCF,KAAM,aAEP,CACCR,MAAOlB,KAAKmB,EAAE,kBAAmB,YACjCC,MAAOC,EAAMC,GAAoBA,GAAeA,EAAcC,YAAYC,KAAK,OAAQ,WAIrE,GAAGI,QAAQC,KAAK,CACnCX,MAAOlB,KAAKmB,EAAE,0BAA2B,iBACzCC,MAAOC,EAAMC,GAAoBA,GAAeA,EAAcC,YAAYC,KAAK,sBAAuBX,EAAQY,MAE/G,CACCC,KAAM,cAGP,IAAK,IAAII,KAAYpB,MAAMqB,IAAK,mBAAsB,CAErD,IAAIC,EAAUnB,EAAQI,OAASa,EAASb,MAExCH,EAAoB,GAAGc,QAAQC,KAAK,CACnCX,MAAOY,EAAST,KAChBD,MAAOC,EAAMC,GAAoBA,GAAeA,EAAcC,YAAYC,KAAK,mBAAoB,CAACC,GAAMZ,EAAQY,GAAIK,SAAYA,EAAST,QAC3IY,QAASD,EACTN,KAAM,QACNC,SAAuB,IAAZK,IAIblB,EAAoB,GAAGc,QAAQC,KAAK,CACnCH,KAAM,aAEP,CACCR,MAAOlB,KAAKmB,EAAE,mBAAoB,iBAClCC,MAAOC,EAAMC,GAAoBA,GAAeA,EAAcC,YAAYC,KAAK,mBAAoB,CAACC,GAAMZ,EAAQY,GAAIK,SAAY,MAClIG,QAASjB,SAKVF,EAAsB,CACrB,CACCI,MAAOlB,KAAKmB,EAAE,kBAAmB,YACjCC,MAAOC,EAAMC,GAAoBA,GAAeA,EAAcC,YAAYC,KAAK,OAAQ,UAM1F,MAAMU,EAAc7B,KAAK8B,kBAAmBrB,GAEtCsB,EAAMhC,cAAciC,gBAAiBzB,EAAM0B,QACjDJ,EAAYK,MAAOH","file":"../menu-sidebar.min.js","sourcesContent":["'use strict'\n\nlet i18n = require('./i18n.min')\nconst electron = require( 'electron' )\nconst { app } = require( 'electron' )\nconst BrowserWindow = electron.BrowserWindow\nconst Menu = electron.Menu\nconst MenuItem = electron.MenuItem\nconst ipc = electron.ipcMain\n\nconst Store = require( 'electron-store' )\nconst store = new Store()\n\n\n\nipc.on('show-sidebar-menu', ( event, message ) => {\n\t\n\tlet sidebarMenuTemplate\n\t\n\tif( message) {\n\t\t\n\t\tlet favorite = (message.favorite == 'true') ? true : false,\n\t\t\tnoCategory = (message.catID == '##none##') ? false : true\n\t\t\n\t\tsidebarMenuTemplate = [\n\t\t\t{\n\t\t\t\tlabel: i18n.t('sidebarmenu:delete', 'Delete'),\n\t\t\t\tclick (item, focusedWindow) { if(focusedWindow) focusedWindow.webContents.send('context-delete', message.id) }\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'separator'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: i18n.t('sidebarmenu:favorite', 'Favorite'),\n\t\t\t\ttype: 'checkbox',\n\t\t\t\tchecked: favorite,\n\t\t\t\tclick (item, focusedWindow) { if(focusedWindow) focusedWindow.webContents.send('context-favorite', message) }\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: i18n.t('sidebarmenu:export', 'Export as') + '…',\n\t\t\t\tclick (item, focusedWindow) { if(focusedWindow) focusedWindow.webContents.send('context-export', message.id) }\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'separator'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: i18n.t('sidebarmenu:move', 'Move to'),\n\t\t\t\tsubmenu: []\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'separator'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: i18n.t('sidebarmenu:new', 'New Note'),\n\t\t\t\tclick (item, focusedWindow) { if(focusedWindow) focusedWindow.webContents.send('note', 'new') }\n\t\t\t}\n\t\t]\n\t\t\n\t\tsidebarMenuTemplate[5].submenu.push({\n\t\t\tlabel: i18n.t('sidebarmenu:newcategory', 'New Category…'),\n\t\t\tclick (item, focusedWindow) { if(focusedWindow) focusedWindow.webContents.send('context-newcategory', message.id) }\n\t\t},\n\t\t{\n\t\t\ttype: 'separator'\n\t\t})\n\t\t\n\t\tfor( let category of store.get( 'categories.list' ) ) {\n\t\t\t\n\t\t\tlet status = (message.catID == category.catID) ? false : true\n\t\t\t\n\t\t\tsidebarMenuTemplate[5].submenu.push({\n\t\t\t\tlabel: category.item,\n\t\t\t\tclick (item, focusedWindow) { if(focusedWindow) focusedWindow.webContents.send('context-category', {'id': message.id, 'category': category.item}) },\n\t\t\t\tenabled: status,\n\t\t\t\ttype: 'radio',\n\t\t\t\tchecked: ( status  === false ) ? true : false\n\t\t\t})\n\t\t}\n\t\t\n\t\tsidebarMenuTemplate[5].submenu.push({\n\t\t\ttype: 'separator'\n\t\t},\n\t\t{\n\t\t\tlabel: i18n.t('sidebarmenu:none', 'Uncategorised'),\n\t\t\tclick (item, focusedWindow) { if(focusedWindow) focusedWindow.webContents.send('context-category', {'id': message.id, 'category': ''}) },\n\t\t\tenabled: noCategory\n\t\t})\n\t\t\n\t} else {\n\t\t\n\t\tsidebarMenuTemplate = [\n\t\t\t{\n\t\t\t\tlabel: i18n.t('sidebarmenu:new', 'New Note'),\n\t\t\t\tclick (item, focusedWindow) { if(focusedWindow) focusedWindow.webContents.send('note', 'new') }\n\t\t\t}\n\t\t]\n\t}\n\t\n\t\n\tconst sidebarMenu = Menu.buildFromTemplate( sidebarMenuTemplate )\n\t\n\tconst win = BrowserWindow.fromWebContents( event.sender )\n\tsidebarMenu.popup( win )\n})\n"]}