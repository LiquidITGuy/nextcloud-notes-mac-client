{"version":3,"sources":["menu-sidebar.js"],"names":["i18n","require","app","BrowserWindow","Menu","MenuItem","ipcMain","log","Store","store","sidebarcontextmenu","sidebarMenuTemplate","on","event","message","categories","get","favorite","noCategory","catID","label","t","[object Object]","item","focusedWindow","webContents","send","id","type","checked","submenu","push","category","status","enabled","sidebarMenu","buildFromTemplate","win","fromWebContents","sender","popup"],"mappings":"AAAA,aAEA,IAAIA,KAAOC,QAAQ,cACnB,MAAMC,IACLA,IAAGC,cACHA,cAAaC,KACbA,KAAIC,SACJA,SAAQC,QACRA,SACGL,QAAS,YACPM,IAAMN,QAAS,gBACfO,MAAQP,QAAS,kBACjBQ,MAAQ,IAAID,MAElB,IAAIE,mBACHC,oBAEDL,QAAQM,GAAG,oBAAqB,CAAEC,EAAOC,KAExC,GAAIA,EAAS,CAEZ,IAAIC,EAAaN,MAAMO,IAAK,mBAC3BC,EAAgC,QAApBH,EAAQG,SACpBC,EAA+B,YAAjBJ,EAAQK,OAEvBR,oBAAsB,CACrB,CACCS,MAAOpB,KAAKqB,EAAE,qBAAsB,UACpCC,MAAOC,EAAMC,GAAoBA,GAAeA,EAAcC,YAAYC,KAAK,iBAAkBZ,EAAQa,MAE1G,CACCC,KAAM,aAEP,CACCR,MAAOpB,KAAKqB,EAAE,uBAAwB,YACtCO,KAAM,WACNC,QAASZ,EACTK,MAAOC,EAAMC,GAAoBA,GAAeA,EAAcC,YAAYC,KAAK,mBAAoBZ,KAEpG,CACCM,MAAOpB,KAAKqB,EAAE,qBAAsB,aAAe,IACnDC,MAAOC,EAAMC,GAAoBA,GAAeA,EAAcC,YAAYC,KAAK,iBAAkBZ,EAAQa,MAE1G,CACCC,KAAM,aAEP,CACCR,MAAOpB,KAAKqB,EAAE,mBAAoB,WAClCS,QAAS,IAEV,CACCF,KAAM,aAEP,CACCR,MAAOpB,KAAKqB,EAAE,kBAAmB,YACjCC,MAAOC,EAAMC,GAAoBA,GAAeA,EAAcC,YAAYC,KAAK,OAAQ,WAIrE,GAAGI,QAAQC,KAAK,CACnCX,MAAOpB,KAAKqB,EAAE,0BAA2B,iBACzCC,MAAOC,EAAMC,GAAoBA,GAAeA,EAAcC,YAAYC,KAAK,sBAAuBZ,EAAQa,MAE/G,CACCC,KAAM,cAGP,IAAK,IAAII,KAAYjB,EAAa,CAEjC,IAAIkB,EAAUnB,EAAQK,OAASa,EAASb,MAExCR,oBAAoB,GAAGmB,QAAQC,KAAK,CACnCX,MAAOY,EAAST,KAChBD,MAAOC,EAAMC,GAAoBA,GAAeA,EAAcC,YAAYC,KAAK,mBAAoB,CAACC,GAAMb,EAAQa,GAAIK,SAAYA,EAAST,QAC3IW,QAASD,EACTL,KAAM,QACNC,SAAuB,IAAZI,IAIbtB,oBAAoB,GAAGmB,QAAQC,KAAK,CACnCH,KAAM,aAEP,CACCR,MAAOpB,KAAKqB,EAAE,mBAAoB,iBAClCC,MAAOC,EAAMC,GAAoBA,GAAeA,EAAcC,YAAYC,KAAK,mBAAoB,CAACC,GAAMb,EAAQa,GAAIK,SAAY,MAClIE,QAAShB,SAKVP,oBAAsB,CACrB,CACCS,MAAOpB,KAAKqB,EAAE,kBAAmB,YACjCC,MAAOC,EAAMC,GAAoBA,GAAeA,EAAcC,YAAYC,KAAK,OAAQ,UAK1F,MAAMS,EAAc/B,KAAKgC,kBAAmBzB,qBAEtC0B,EAAMlC,cAAcmC,gBAAiBzB,EAAM0B,QACjD7B,mBAAqByB,EAAYK,MAAOH","file":"../menu-sidebar.min.js","sourcesContent":["'use strict'\n\nlet i18n = require('./i18n.min')\nconst {\n\tapp,\n\tBrowserWindow,\n\tMenu,\n\tMenuItem,\n\tipcMain\n} = require( 'electron' )\nconst log\t= require( 'electron-log' )\nconst Store = require( 'electron-store' )\nconst store = new Store()\n\nlet sidebarcontextmenu,\n\tsidebarMenuTemplate\n\nipcMain.on('show-sidebar-menu', ( event, message ) => {\n\t\n\tif( message) {\n\t\t\n\t\tlet categories = store.get( 'categories.list' ),\n\t\t\tfavorite = (message.favorite == 'true') ? true : false,\n\t\t\tnoCategory = (message.catID == '##none##') ? false : true\n\t\t\n\t\tsidebarMenuTemplate = [\n\t\t\t{\n\t\t\t\tlabel: i18n.t('sidebarmenu:delete', 'Delete'),\n\t\t\t\tclick (item, focusedWindow) { if(focusedWindow) focusedWindow.webContents.send('context-delete', message.id) }\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'separator'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: i18n.t('sidebarmenu:favorite', 'Favorite'),\n\t\t\t\ttype: 'checkbox',\n\t\t\t\tchecked: favorite,\n\t\t\t\tclick (item, focusedWindow) { if(focusedWindow) focusedWindow.webContents.send('context-favorite', message) }\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: i18n.t('sidebarmenu:export', 'Export as') + '…',\n\t\t\t\tclick (item, focusedWindow) { if(focusedWindow) focusedWindow.webContents.send('context-export', message.id) }\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'separator'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: i18n.t('sidebarmenu:move', 'Move to'),\n\t\t\t\tsubmenu: []\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'separator'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: i18n.t('sidebarmenu:new', 'New Note'),\n\t\t\t\tclick (item, focusedWindow) { if(focusedWindow) focusedWindow.webContents.send('note', 'new') }\n\t\t\t}\n\t\t]\n\t\t\n\t\tsidebarMenuTemplate[5].submenu.push({\n\t\t\tlabel: i18n.t('sidebarmenu:newcategory', 'New Category…'),\n\t\t\tclick (item, focusedWindow) { if(focusedWindow) focusedWindow.webContents.send('context-newcategory', message.id) }\n\t\t},\n\t\t{\n\t\t\ttype: 'separator'\n\t\t})\n\t\t\n\t\tfor( let category of categories ) {\n\t\t\t\n\t\t\tlet status = (message.catID == category.catID) ? false : true\n\t\t\t\n\t\t\tsidebarMenuTemplate[5].submenu.push({\n\t\t\t\tlabel: category.item,\n\t\t\t\tclick (item, focusedWindow) { if(focusedWindow) focusedWindow.webContents.send('context-category', {'id': message.id, 'category': category.item}) },\n\t\t\t\tenabled: status,\n\t\t\t\ttype: 'radio',\n\t\t\t\tchecked: ( status  === false ) ? true : false\n\t\t\t})\n\t\t}\n\t\t\n\t\tsidebarMenuTemplate[5].submenu.push({\n\t\t\ttype: 'separator'\n\t\t},\n\t\t{\n\t\t\tlabel: i18n.t('sidebarmenu:none', 'Uncategorised'),\n\t\t\tclick (item, focusedWindow) { if(focusedWindow) focusedWindow.webContents.send('context-category', {'id': message.id, 'category': ''}) },\n\t\t\tenabled: noCategory\n\t\t})\n\t\t\n\t} else {\n\t\t\n\t\tsidebarMenuTemplate = [\n\t\t\t{\n\t\t\t\tlabel: i18n.t('sidebarmenu:new', 'New Note'),\n\t\t\t\tclick (item, focusedWindow) { if(focusedWindow) focusedWindow.webContents.send('note', 'new') }\n\t\t\t}\n\t\t]\n\t}\n\t\t\n\tconst sidebarMenu = Menu.buildFromTemplate( sidebarMenuTemplate )\n\t\n\tconst win = BrowserWindow.fromWebContents( event.sender )\n\tsidebarcontextmenu = sidebarMenu.popup( win )\n})\n"]}