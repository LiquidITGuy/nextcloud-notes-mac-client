{"version":3,"names":[],"mappings":"","sources":["menu-notes.js"],"sourcesContent":["'use strict'\n\nlet i18n = require('./i18n.min')\nconst {\n\tapp,\n\tBrowserWindow,\n\tMenu,\n\tMenuItem,\n\tipcMain\n} = require( 'electron' )\nconst log\t= require( 'electron-log' )\nconst Store = require( 'electron-store' )\nconst store = new Store()\n\n\nlet notescontextmenu,\n\tnotesMenuTemplate\n\nipcMain.on('show-notes-menu', ( event, message ) => {\n\t\n\tif( message.preview ) {\n\t\t\n\t\tnotesMenuTemplate = [\n\t\t\t\n\t\t\t{\n\t\t\t\tlabel: i18n.t('menu:edit.copy', 'Copy'),\n\t\t\t\trole: 'copy'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: i18n.t('menu:edit.selectall', 'Select All'),\n\t\t\t\taccelerator: 'Cmd+a',\n\t\t\t\tclick (item, focusedWindow) { if(focusedWindow) focusedWindow.webContents.send('note', 'selectall') }\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'separator'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: i18n.t('menu:note.print', 'Printâ€¦'),\n\t\t\t\taccelerator: 'Cmd+p',\n\t\t\t\tclick (item, focusedWindow) { if(focusedWindow) focusedWindow.webContents.send('note', 'print') }\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'separator'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: i18n.t('notecontextmenu:speech.speech', 'Speech'),\n\t\t\t\tsubmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: i18n.t('notecontextmenu:speech.start', 'Start Speaking'),\n\t\t\t\t\t\trole: 'startSpeaking'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: i18n.t('notecontextmenu:speech.stop', 'Stop Speaking'),\n\t\t\t\t\t\trole: 'stopSpeaking'\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t\t\n\t} else {\n\t\t\n\t\tlet enable = (message.selection.length === 0 ) ? false : true\n\t\t\n\t\tnotesMenuTemplate = [\n\t\t\t\n\t\t\t{\n\t\t\t\tlabel: i18n.t('menu:edit.cut', 'Cut'),\n\t\t\t\trole: 'cut'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: i18n.t('menu:edit.copy', 'Copy'),\n\t\t\t\trole: 'copy'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: i18n.t('menu:edit.paste', 'Paste'),\n\t\t\t\trole: 'paste'\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'separator'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: i18n.t('menu:edit.delete', 'Delete'),\n\t\t\t\trole: 'delete'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: i18n.t('menu:edit.selectall', 'Select All'),\n\t\t\t\taccelerator: 'Cmd+a',\n\t\t\t\tclick (item, focusedWindow) { if(focusedWindow) focusedWindow.webContents.send('note', 'selectall') }\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'separator'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: i18n.t('notecontextmenu:paragraph', 'Paragraph Styles'),\n\t\t\t\tsubmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: i18n.t('menu:markdown.bold', 'Bold'),\n\t\t\t\t\t\taccelerator: 'Cmd+b',\n\t\t\t\t\t\tclick (item, focusedWindow) { if(focusedWindow) focusedWindow.webContents.send('markdown', 'b') }\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: i18n.t('menu:markdown.italic', 'Italic'),\n\t\t\t\t\t\taccelerator: 'Cmd+i',\n\t\t\t\t\t\tclick (item, focusedWindow) { if(focusedWindow) focusedWindow.webContents.send('markdown', 'i') }\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: i18n.t('menu:markdown.strike', 'Strikethrough'),\n\t\t\t\t\t\taccelerator: 'Cmd+Shift+d',\n\t\t\t\t\t\tclick (item, focusedWindow) { if(focusedWindow) focusedWindow.webContents.send('markdown', 'del') }\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'separator'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: i18n.t('menu:markdown.ul', 'Unordered List'),\n\t\t\t\t\t\taccelerator: 'Cmd+l',\n\t\t\t\t\t\tclick (item, focusedWindow) { if(focusedWindow) focusedWindow.webContents.send('markdown', 'ul') }\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: i18n.t('menu:markdown.ol', 'Ordered List'),\n\t\t\t\t\t\taccelerator: 'Cmd+Alt+l',\n\t\t\t\t\t\tclick (item, focusedWindow) { if(focusedWindow) focusedWindow.webContents.send('markdown', 'ol') }\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: i18n.t('menu:markdown.cl', 'Checkbox List'),\n\t\t\t\t\t\taccelerator: 'Cmd+Alt+Shift+l',\n\t\t\t\t\t\tclick (item, focusedWindow) { if(focusedWindow) focusedWindow.webContents.send('markdown', 'cl') }\n\t\t\t\t\t},\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'separator'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: i18n.t('notecontextmenu:entities.entities', 'Encode / Decode Entites'),\n\t\t\t\tsubmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: i18n.t('notecontextmenu:entities.encode', 'Encode Entities'),\n\t\t\t\t\t\tenabled: enable,\n\t\t\t\t\t\tclick (item, focusedWindow) { if(focusedWindow) focusedWindow.webContents.send('context-note-encode', message.selection) }\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: i18n.t('notecontextmenu:entities.decode', 'Decode Entities'),\n\t\t\t\t\t\tenabled: enable,\n\t\t\t\t\t\tclick (item, focusedWindow) { if(focusedWindow) focusedWindow.webContents.send('context-note-decode', message.selection) }\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: i18n.t('notecontextmenu:transformations.transformations', 'Transformations'),\n\t\t\t\tsubmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: i18n.t('notecontextmenu:transformations.upper', 'Make Uppercase'),\n\t\t\t\t\t\tenabled: enable,\n\t\t\t\t\t\tclick (item, focusedWindow) { if(focusedWindow) focusedWindow.webContents.send('context-note-upper', message.selection) }\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: i18n.t('notecontextmenu:transformations.lower', 'Make Lowercase'),\n\t\t\t\t\t\tenabled: enable,\n\t\t\t\t\t\tclick (item, focusedWindow) { if(focusedWindow) focusedWindow.webContents.send('context-note-lower', message.selection) }\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: i18n.t('notecontextmenu:transformations.caps', 'Capitalize'),\n\t\t\t\t\t\tenabled: enable,\n\t\t\t\t\t\tclick (item, focusedWindow) { if(focusedWindow) focusedWindow.webContents.send('context-note-caps', message.selection) }\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n\t\n\tconst notesMenu = Menu.buildFromTemplate( notesMenuTemplate )\n\t\n\tconst win = BrowserWindow.fromWebContents( event.sender )\n\tnotescontextmenu = notesMenu.popup( win )\n})\n"],"file":"../menu-notes.min.js"}