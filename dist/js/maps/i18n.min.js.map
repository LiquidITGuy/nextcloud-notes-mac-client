{"version":3,"sources":["i18n.js"],"names":["path","require","electron","fs","loadedLanguage","app","remote","i18n","existsSync","join","__dirname","getLocale","JSON","parse","readFileSync","module","exports","prototype","__","phrase","translation","undefined"],"mappings":"AAAA,MAAMA,KAASC,QAAS,QAClBC,SAAYD,QAAS,YACrBE,GAAOF,QAAS,YAEtB,IAAIG,eACAC,IAAMH,SAASG,IAAMH,SAASG,IAAMH,SAASI,OAAOD,IAIxD,SAASE,OAIPH,eAFGD,GAAGK,WAAYR,KAAKS,KAAMC,UAAY,YAAcL,IAAIM,YAAc,UAExDC,KAAKC,MAAOV,GAAGW,aAAcd,KAAKS,KAAMC,UAAY,YAAcL,IAAIM,YAAc,SAAW,SAI/FC,KAAKC,MAAOV,GAAGW,aAAcd,KAAKS,KAAMC,UAAY,oBAA2B,SAVlGK,OAAOC,QAAUT,KAejBA,KAAKU,UAAUC,GAAK,SAAUC,GAE7B,IAAIC,EAAchB,eAAee,GAOjC,YALoBE,IAAhBD,IAEHA,EAAcD,GAGRC","file":"../i18n.min.js","sourcesContent":["const path \t\t= require( 'path' )\nconst electron \t= require( 'electron' )\nconst fs \t\t= require( 'fs-extra' )\n\nlet loadedLanguage\nlet app = electron.app ? electron.app : electron.remote.app\n\nmodule.exports = i18n\n\nfunction i18n() {\n\t\n\tif( fs.existsSync( path.join( __dirname + '/../i18n/' + app.getLocale() + '.json' ) ) ) {\n\t\n\t\tloadedLanguage = JSON.parse( fs.readFileSync( path.join( __dirname + '/../i18n/' + app.getLocale() + '.json' ), 'utf8' ) )\n\t\n\t} else {\n\t\t\n\t\tloadedLanguage = JSON.parse( fs.readFileSync( path.join( __dirname + '/../i18n/' + 'en.json' ), 'utf8' ) )\n\t}\n}\n\t\n\ni18n.prototype.__ = function( phrase ) {\n\t\n\tlet translation = loadedLanguage[phrase]\n\t\n\tif( translation === undefined ) {\n\t\n\t\ttranslation = phrase\n\t}\n\t\n\treturn translation\n}\n"]}