{"version":3,"names":[],"mappings":"","sources":["search.js"],"sourcesContent":["'use strict'\n\nconst Store\t\t\t\t= require( 'electron-store' )\nconst JsSearch\t\t\t= require( 'js-search' )\nconst stemmer\t\t\t= require( 'stemmer' )\nconst removeMarkdown\t= require( 'remove-markdown' )\nconst $\t\t\t\t\t= require( 'jquery' )\nconst log\t\t\t\t= require( 'electron-log' )\n\nconst sanitize\t\t\t= require( './sanitize-category.min' )\n\nconst store\t\t\t\t= new Store()\nconst database\t\t\t= new Store({name: 'database'})\n\n\n\nmodule.exports.searchNotes = function( term, callback ) {\n\t\n\tlet data\t= database.get( 'notes' ),\n\t\tcat \t= store.get('categories.selected'),\n\t\tnotes\t= [],\n\t\tresult\t= []\n\t\n\tfor( let item of data ) {\n\t\t\n\t\titem.content = removeMarkdown( item.content )\n\t\tlet catClass = sanitize.sanitizeCategory( item.category )\n\t\t\n\t\tnotes.push({\n\t\t\tid: item.id,\n\t\t\tcontent: item.content,\n\t\t\tcategory: catClass,\n\t\t\tfavorite: item.favorite\n\t\t})\n\t}\n\t\n\tlet search = new JsSearch.Search( 'id' )\n\t\n\tsearch.tokenizer = new JsSearch.StemmingTokenizer( stemmer, new JsSearch.SimpleTokenizer())\n\t\n\tsearch.addIndex( 'content' )\n\tsearch.addDocuments( notes )\n\tlet filtered = search.search( term )\n\t\n\tfor( let item of filtered ) {\n\t\t\n\t\tresult.push( item.id )\n\t}\n\t\n\tcallback( result )\n}\n"],"file":"../search.min.js"}