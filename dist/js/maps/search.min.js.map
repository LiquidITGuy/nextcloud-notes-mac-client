{"version":3,"sources":["search.js"],"names":["Store","require","JsSearch","stemmer","sw","removeMarkdown","$","log","i18n","sanitize","store","database","name","checkStopwordLang","theLang","includes","module","exports","searchNotes","term","callback","clean","termArr","split","data","get","lang","language","substring","notes","result","removeStopwords","join","item","content","catClass","sanitizeCategory","category","push","id","favorite","search","Search","tokenizer","StemmingTokenizer","SimpleTokenizer","addIndex","addDocuments","filtered"],"mappings":"AAAA,aAEA,MAAMA,MAAWC,QAAS,kBACpBC,SAAaD,QAAS,aACtBE,QAAYF,QAAS,WACrBG,GAAQH,QAAS,YACjBI,eAAiBJ,QAAS,mBAC1BK,EAAQL,QAAS,UACjBM,IAASN,QAAS,gBAElBO,KAAUP,QAAS,cACnBQ,SAAaR,QAAS,2BAEtBS,MAAW,IAAIV,MACfW,SAAa,IAAIX,MAAM,CAACY,KAAM,aA4DpC,SAASC,kBAAmBC,GAI3B,MAFgB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAE7KC,SAAUD,GAEdA,EAIA,KAlETE,OAAOC,QAAQC,YAAc,SAAUC,EAAMC,GAE5C,IAMCC,EANGC,EAAUH,EAAKI,MAAO,KACzBC,EAAOb,SAASc,IAAK,SAErBC,GADOhB,MAAMe,IAAI,uBACVjB,KAAKmB,SAASC,UAAU,EAAG,IAClCC,EAAQ,GACRC,EAAS,GAGV,IAA6C,IAAzCpB,MAAMe,IAAK,yBAAqC,CAGlDJ,EADejB,GAAG2B,gBAAiBT,EAASlB,GAAGS,kBAAmBa,KAC/CM,KAAM,UAI1BX,EAAQF,EAGT,IAAK,IAAIc,KAAQT,EAAO,CAEvBS,EAAKC,QAAU7B,eAAgB4B,EAAKC,SACpC,IAAIC,EAAW1B,SAAS2B,iBAAkBH,EAAKI,UAE/CR,EAAMS,KAAK,CACVC,GAAIN,EAAKM,GACTL,QAASD,EAAKC,QACdG,SAAUF,EACVK,SAAUP,EAAKO,WAIjB,IAAIC,EAAS,IAAIvC,SAASwC,OAAQ,OAIU,IAAxChC,MAAMe,IAAK,yBAA8C,OAATC,IAEnDe,EAAOE,UAAY,IAAIzC,SAAS0C,kBAAmBzC,QAAS,IAAID,SAAS2C,kBAG1EJ,EAAOK,SAAU,WACjBL,EAAOM,aAAclB,GACrB,IAAImB,EAAWP,EAAOA,OAAQpB,GAE9B,IAAK,IAAIY,KAAQe,EAEhBlB,EAAOQ,KAAML,EAAKM,IAGnBnB,EAAUU,EAAQT","file":"../search.min.js","sourcesContent":["'use strict'\n\nconst Store\t\t\t\t= require( 'electron-store' )\nconst JsSearch\t\t\t= require( 'js-search' )\nconst stemmer\t\t\t= require( 'stemmer' )\nconst sw\t\t\t\t= require( 'stopword' )\nconst removeMarkdown\t= require( 'remove-markdown' )\nconst $\t\t\t\t\t= require( 'jquery' )\nconst log\t\t\t\t= require( 'electron-log' )\n\nconst i18n\t\t\t\t= require( './i18n.min' )\nconst sanitize\t\t\t= require( './sanitize-category.min' )\n\nconst store\t\t\t\t= new Store()\nconst database\t\t\t= new Store({name: 'database'})\n\n\n\nmodule.exports.searchNotes = function( term, callback ) {\n\t\n\tlet termArr = term.split( ' ' ),\n\t\tdata\t= database.get( 'notes' ),\n\t\tcat \t= store.get('categories.selected'),\n\t\tlang\t= i18n.language.substring(0, 2),\n\t\tnotes\t= [],\n\t\tresult\t= [],\n\t\tclean\n\t\n\tif( store.get( 'appSettings.stopwords' ) === true ) {\n\t\t\n\t\tlet cleanArr \t= sw.removeStopwords( termArr, sw[checkStopwordLang( lang )] )\n\t\t\tclean \t\t= cleanArr.join( ' ' )\n\t\n\t} else {\n\t\n\t\tclean = term\n\t}\n\t\n\tfor( let item of data ) {\n\t\t\n\t\titem.content = removeMarkdown( item.content )\n\t\tlet catClass = sanitize.sanitizeCategory( item.category )\n\t\t\n\t\tnotes.push({\n\t\t\tid: item.id,\n\t\t\tcontent: item.content,\n\t\t\tcategory: catClass,\n\t\t\tfavorite: item.favorite\n\t\t})\n\t}\n\t\n\tlet search = new JsSearch.Search( 'id' )\n\t\n\t//todo(dgmid): at the moment stemming is only available in English\n\t\n\tif( store.get( 'appSettings.stemming' ) === true && lang === 'en' ) {\n\t\n\t\tsearch.tokenizer = new JsSearch.StemmingTokenizer( stemmer, new JsSearch.SimpleTokenizer() )\n\t}\n\t\n\tsearch.addIndex( 'content' )\n\tsearch.addDocuments( notes )\n\tlet filtered = search.search( clean )\n\t\n\tfor( let item of filtered ) {\n\t\t\n\t\tresult.push( item.id )\n\t}\n\t\n\tcallback( result, clean )\n}\n\n\n\nfunction checkStopwordLang( theLang ) {\n\t\n\tconst langArr = ['af', 'ar', 'bn', 'br', 'da', 'de', 'es', 'fa', 'fi', 'fr', 'ha', 'he', 'hi', 'id', 'it', 'ja', 'nl', 'no', 'pl', 'pt', 'pa', 'ru', 'so', 'st', 'sv', 'sw', 'vi', 'yo', 'zh']\n\t\n\tif( langArr.includes( theLang ) ) {\n\t\t\n\t\treturn theLang\n\t\t\n\t} else {\n\t\t\n\t\treturn 'en'\n\t}\n}\n"]}