{"version":3,"sources":["notes.js"],"names":["i18n","require","ipcRenderer","Store","store","$","removeMarkdown","fetch","dates","categories","displayNote","note","removeClass","html","titlebarDate","modified","easymde","toTextArea","EasyMDE","editor","easymdeSetup","toggleSpellcheck","get","codemirror","on","instance","event","which","selection","doc","getSelection","send","preview","attr","id","value","content","clearHistory","togglePreview","setCheckLists","fadeIn","fadeOut","this","remove","firstLoad","check","appVersion","module","exports","listNotes","array","sidebar","database","set","sortby","orderby","noteList","allCats","length","sort","x","y","itemX","itemY","item","addSidebarEntry","push","category","getSelected","categoryList","selectCategory","theDate","Date","formattedDate","sidebarDate","getTime","catClass","sanitizeCategory","theCat","t","plainTxt","replace","substr","slice","title","favorite","selected","addClass","parent","prev","children","apiCall","call","body","notes","fetchResult"],"mappings":"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","file":"../notes.min.js","sourcesContent":["'use strict'\n\nconst i18n = require( './i18n.min' )\n\nconst { ipcRenderer }\t= require( 'electron' )\nconst Store\t\t\t\t= require( 'electron-store' )\nconst store\t\t\t\t= new Store()\nconst $\t\t\t\t\t= require( 'jquery' )\nconst removeMarkdown\t= require( 'remove-markdown' )\n\nconst fetch\t\t\t\t= require( './fetch.min' )\nconst dates\t\t\t\t= require( './dates.min' )\nconst categories\t\t= require( './categories.min' )\n\n\n\nmodule.exports = {\n\t\n\tlistNotes: function( array, sidebar ) {\n\t\t\n\t\tif( sidebar !== null ) database.set('notes', array)\n\t\t\n\t\tlet sortby \t= store.get( 'appSettings.sortby' ),\n\t\t\torderby = store.get( 'appSettings.orderby' ),\n\t\t\tnoteList = '',\n\t\t\tallCats = []\n\t\t\n\t\tif( array.length > 1 ) {\n\t\t\t\n\t\t\tarray.sort(function(x, y) {\n\t\t\t\t\n\t\t\t\tvar itemX = x[sortby]\n\t\t\t\tvar itemY = y[sortby]\n\t\t\t\t\n\t\t\t\tif( orderby === 'asc' ) {\n\t\t\t\t\t\n\t\t\t\t\treturn (itemX < itemY) ? -1 : (itemX > itemY) ? 1 : 0\n\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\treturn (itemX > itemY) ? -1 : (itemX < itemY) ? 1 : 0\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\t\n\t\tfor ( let item of array ) {\n\t\t\t\n\t\t\tnoteList += module.exports.addSidebarEntry( item )\n\t\t\tallCats.push( item.category )\n\t\t}\n\t\t\n\t\t$('#sidebar').html( noteList )\n\t\t\n\t\tif( sidebar ) {\n\t\t\t\n\t\t\tmodule.exports.getSelected( 'sidebar' )\n\t\t\n\t\t} else {\n\t\t\t\n\t\t\tmodule.exports.getSelected()\n\t\t}\n\t\t\n\t\tcategories.categoryList( allCats )\n\t\tcategories.selectCategory( store.get('categories.selected') )\n\t},\n\t\n\taddSidebarEntry: function( item ) {\n\t\t\n\t\tlet theDate = new Date( item.modified ),\n\t\t\tformattedDate = dates.sidebarDate( theDate.getTime() )\n\t\t\n\t\tlet\tcatClass = ( item.category ) ? categories.sanitizeCategory( item.category ) : '##none##'\n\t\t\n\t\tlet\ttheCat = ( item.category ) ? item.category : i18n.t('app:categories.none', 'Uncategorised')\n\t\t\n\t\tlet plainTxt = removeMarkdown( item.content.replace(/(!\\[.*\\]\\(.*\\)|<[^>]*>|>|<)/g, ''))\n\t\t\n\t\tif( plainTxt ) {\n\t\n\t\t\tplainTxt = plainTxt.substr(0, 120).slice(item.title.length)\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tplainTxt = i18n.t('app:sidebar.notext', 'No additional text')\n\t\t}\n\t\t\n\t\tlet entry = `<li data-id=\"${item.id}\">\n\t\t\t\t\t\t<button data-id=\"${item.id}\" data-title=\"${item.title}\" data-content=\"\" data-catid=\"${catClass}\" data-category=\"${item.category}\" data-favorite=\"${item.favorite}\">\n\t\t\t\t\t\t\t<span class=\"side-title\">${item.title}</span>\n\t\t\t\t\t\t\t<span class=\"side-text\">${formattedDate}&nbsp;&nbsp;<span class=\"excerpt\">${plainTxt}</span></span>\n\t\t\t\t\t\t\t<span class=\"side-cat\">${theCat}</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</li>`\n\t\t\n\t\treturn entry\n\t},\n\t\n\tgetSelected: function( sidebar ) {\n\t\t\n\t\tlet selected = store.get( 'appInterface.selected' )\n\t\t\n\t\tif( selected ) {\n\t\t\t\n\t\t\t$(`button[data-id=\"${selected}\"]`).addClass('selected').parent().prev().children().addClass('above-selected')\n\t\t\t\n\t\t\tif( !sidebar ) {\n\t\t\t\t\n\t\t\t\tfetch.apiCall( 'single', selected, null, function( call, id, body, notes ) {\n\t\t\t\t\t\n\t\t\t\t\tfetchResult( call, id, body, notes )\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t},\n\t\n\tdisplayNote: function( note ) {\n\t\t\n\t}\n}\n\n\nfunction displayNote( note ) {\n\t\n\t$('#edit').removeClass('editing')\n\t\n\t$('#time').html( dates.titlebarDate( note.modified ) )\n\t\n\tif( easymde ) {\n\t\t\n\t\teasymde.toTextArea()\n\t\teasymde = null\n\t}\n\t\n\teasymde = new EasyMDE( editor.easymdeSetup )\n\t\n\ttoggleSpellcheck( store.get('appSettings.spellcheck') )\t\n\t\n\t// register right click for notes menu\n\t\n\teasymde.codemirror.on( 'mousedown', function( instance, event ) {\n\t\t\n\t\tif( event.which === 3 ) {\n\t\t\t\n\t\t\tlet selection = easymde.codemirror.doc.getSelection()\n\t\t\t\n\t\t\tipcRenderer.send('show-notes-menu',\n\t\t\t\t{\n\t\t\t\t\tselection: selection,\n\t\t\t\t\tpreview: false\n\t\t\t\t}\n\t\t\t)\n\t\t\treturn\n\t\t}\n\t})\n\t\n\t$('#note').attr('data-id', note.id)\n\teasymde.value( note.content )\n\teasymde.codemirror.clearHistory()\n\teasymde.togglePreview()\n\tsetCheckLists()\n\t\n\t$('time').fadeIn('fast')\n\t$('.loader').fadeOut(400, function() { $(this).remove() } )\n\t\n\tif( firstLoad === true ) {\n\t\t\n\t\tconst check = require( './version.min' )\n\t\tfirstLoad = 1\n\t\tcheck.appVersion()\n\t}\n}\n"]}