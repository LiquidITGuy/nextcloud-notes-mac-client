{"version":3,"names":[],"mappings":"","sources":["prefs.js"],"sourcesContent":["'use strict'\n\nconst i18n \t\t\t\t= require( './i18n.min' )\nconst {ipcRenderer} \t= require( 'electron' )\nconst Store \t\t\t= require( 'electron-store' )\nconst store \t\t\t= new Store()\nconst $ \t\t\t\t= require( 'jquery' )\nconst jqueryI18next \t= require( 'jquery-i18next' )\n\njqueryI18next.init(i18n, $)\n\n\n\n//note(dgmid): set lang & localize strings\n\n$('html').attr('lang', i18n.language)\n$('title').localize()\n$('header').localize()\n$('option').localize()\n$('label').localize()\n\n\n\n//note(dgmid): log exceptions\n\nwindow.onerror = function( error, url, line ) {\n\t\n\tipcRenderer.send( 'error-in-render', {error, url, line} )\n}\n\n\n\n$(document).ready(function() {\n\t\n\t$( 'input[type=\"radio\"]' ).each(function( i, obj ) {\n\t\t\n\t\tlet radio = document.querySelector( '#radio-svg' ),\n\t\t\tclone = radio.content.cloneNode( true )\n\t\t\t\n\t\t\t$( obj ).after( clone )\n\t})\n\t\n\t$('#sortby').val( store.get('appSettings.sortby') )\n\t$('#orderby').val( store.get('appSettings.orderby') )\n\t$('#zoom').val( store.get('appSettings.zoom') )\n\t$(`#${store.get('appSettings.cursor')}`).prop('checked', true)\n\t$('#stopwords').prop('checked', store.get('appSettings.stopwords') )\n\t$('#stemming').prop('checked', store.get('appSettings.stemming') )\n\t\n\t\n\tif( localStorage.user_theme ) {\n\t\t\n\t\t$(`#${localStorage.user_theme}`).prop('checked', true)\n\t\t\n\t} else {\n\t\t\n\t\t$('#os-theme').prop('checked', true)\n\t}\n\t\n\t\n\t$('select, input').on('change', function() {\n\t\t\n\t\tlet name = $(this).attr('name'),\n\t\t\tval = $(this).val()\n\t\t\t\n\t\tswitch( name ) {\n\t\t\t\n\t\t\tcase 'sortby':\n\t\t\tcase 'orderby':\n\t\t\t\tstore.set( `appSettings.${name}`, val )\n\t\t\t\tipcRenderer.send('reload-sidebar', null )\n\t\t\tbreak\n\t\t\t\n\t\t\tcase 'zoom':\n\t\t\t\tstore.set( `appSettings.${name}`, val )\n\t\t\t\tipcRenderer.send('set-zoom-slider', parseInt( val ) )\n\t\t\tbreak\n\t\t\t\n\t\t\tcase 'cursor':\n\t\t\t\tstore.set( `appSettings.${name}`, val )\n\t\t\tbreak\n\t\t\t\n\t\t\tcase 'stopwords':\n\t\t\t\tlet stopwords = $('#stopwords').is(':checked')\n\t\t\t\tstore.set( `appSettings.${name}`, stopwords )\n\t\t\tbreak\n\t\t\t\n\t\t\tcase 'stemming':\n\t\t\t\tlet stemming = $('#stemming').is(':checked')\n\t\t\t\tstore.set( `appSettings.${name}`, stemming )\n\t\t\tbreak\n\t\t\t\n\t\t\tcase 'theme':\n\t\t\t\t\n\t\t\t\tlet theme = $('[name$=theme]:checked').val()\n\t\t\t\t\n\t\t\t\tif( theme == 'default' ) {\n\t\t\t\t\t\n\t\t\t\t\tlocalStorage.removeItem('user_theme')\n\t\t\t\t\tipcRenderer.send('update-theme', theme )\n\t\t\t\t\t__setTheme()\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tlocalStorage.user_theme = theme\n\t\t\t\t\tipcRenderer.send('update-theme', theme )\n\t\t\t\t\t__setTheme()\n\t\t\t\t}\n\t\t\tbreak\n\t\t}\n\t})\n})\n"],"file":"../prefs.min.js"}