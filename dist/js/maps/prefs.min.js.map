{"version":3,"sources":["prefs.js"],"names":["ipcRenderer","require","Store","store","$","document","ready","val","get","prop","on","name","this","attr","set","send","parseInt","checked","is"],"mappings":"AAAA,aAEA,MAAMA,YAACA,aAAeC,QAAS,YACzBC,MAAQD,QAAS,kBACjBE,MAAQ,IAAID,MACZE,EAAIH,QAAS,UAInBG,EAAEC,UAAUC,MAAM,WAEjBF,EAAE,WAAWG,IAAKJ,MAAMK,IAAI,uBAC5BJ,EAAE,YAAYG,IAAKJ,MAAMK,IAAI,wBAC7BJ,EAAE,SAASG,IAAKJ,MAAMK,IAAI,qBAC1BJ,EAAE,eAAeK,KAAK,UAAWN,MAAMK,IAAI,2BAC3CJ,MAAMD,MAAMK,IAAI,yBAAyBC,KAAK,WAAW,GAEzDL,EAAE,iBAAiBM,GAAG,SAAU,WAE/B,IAAIC,EAAOP,EAAEQ,MAAMC,KAAK,QACvBN,EAAMH,EAAEQ,MAAML,MAEf,OAAQI,GAEP,IAAK,SACL,IAAK,UACJR,MAAMW,mBAAoBH,IAAQJ,GAClCP,YAAYe,KAAK,iBAAkB,MACpC,MAEA,IAAK,OACJZ,MAAMW,mBAAoBH,IAAQJ,GAClCP,YAAYe,KAAK,kBAAmBC,SAAUT,IAC/C,MAEA,IAAK,aACJ,IAAIU,EAAUb,EAAE,eAAec,GAAG,YAClCf,MAAMW,mBAAoBH,IAAQM,GAClCjB,YAAYe,KAAK,aAAcE,GAChC,MAEA,IAAK,SACJd,MAAMW,mBAAoBH,IAAQJ","file":"../prefs.min.js","sourcesContent":["'use strict'\n\nconst {ipcRenderer} = require( 'electron' )\nconst Store = require( 'electron-store' )\nconst store = new Store()\nconst $ = require( 'jquery' )\n\n\n\n$(document).ready(function() {\n\t\n\t$('#sortby').val( store.get('appSettings.sortby') )\n\t$('#orderby').val( store.get('appSettings.orderby') )\n\t$('#zoom').val( store.get('appSettings.zoom') )\n\t$('#spellcheck').prop('checked', store.get('appSettings.spellcheck') )\n\t$(`#${store.get('appSettings.cursor')}`).prop('checked', true)\n\t\n\t$('select, input').on('change', function() {\n\t\t\n\t\tlet name = $(this).attr('name'),\n\t\t\tval = $(this).val()\n\t\t\t\n\t\tswitch( name ) {\n\t\t\t\n\t\t\tcase 'sortby':\n\t\t\tcase 'orderby':\n\t\t\t\tstore.set( `appSettings.${name}`, val )\n\t\t\t\tipcRenderer.send('reload-sidebar', null )\n\t\t\tbreak\n\t\t\t\n\t\t\tcase 'zoom':\n\t\t\t\tstore.set( `appSettings.${name}`, val )\n\t\t\t\tipcRenderer.send('set-zoom-slider', parseInt( val ) )\n\t\t\tbreak\n\t\t\t\n\t\t\tcase 'spellcheck':\n\t\t\t\tlet checked = $('#spellcheck').is(':checked')\n\t\t\t\tstore.set( `appSettings.${name}`, checked )\n\t\t\t\tipcRenderer.send('spellcheck', checked )\n\t\t\tbreak\n\t\t\t\n\t\t\tcase 'cursor':\n\t\t\t\tstore.set( `appSettings.${name}`, val )\n\t\t\tbreak\n\t\t}\n\t})\n})\n"]}