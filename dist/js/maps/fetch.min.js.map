{"version":3,"sources":["fetch.js"],"names":["i18n","require","remote","dialog","Store","store","log","parseErrorMessage","message","errMsg","t","module","exports","apiCall","call","id","body","callback","method","server","get","username","password","url","init","headers","Authorization","btoa","Content-Type","mode","cache","credentials","JSON","stringify","info","fetch","then","response","ok","text","warn","status","statusText","errTxt","Error","notes","parse","showErrorBox","error","catch"],"mappings":"AAAA,aAEA,MAAMA,KAAOC,QAAS,eAEhBC,OAAEA,QAAWD,QAAS,YACtBE,OAAUD,OAAOC,OACjBC,MAAUH,QAAS,kBACnBI,MAAU,IAAID,MACdE,IAAQL,QAAS,gBA+FvB,SAASM,kBAAmBC,GAE3B,IAAIC,EAEJ,OAAQD,GAEP,KAAK,IAAKC,EAAST,KAAKU,EAAE,+BAAgC,eAC1D,MACA,KAAK,IAAKD,EAAST,KAAKU,EAAE,+BAAgC,gBAC1D,MACA,KAAK,IAAKD,EAAST,KAAKU,EAAE,+BAAgC,aAC1D,MACA,KAAK,IAAKD,EAAST,KAAKU,EAAE,+BAAgC,aAC1D,MACA,KAAK,IAAKD,EAAST,KAAKU,EAAE,+BAAgC,yBAC1D,MACA,KAAK,IAAKD,EAAST,KAAKU,EAAE,+BAAgC,mBAC1D,MACA,KAAK,IAAKD,EAAST,KAAKU,EAAE,+BAAgC,eAC1D,MACA,KAAK,IAAKD,EAAST,KAAKU,EAAE,+BAAgC,uBAC1D,MACA,KAAK,IAAKD,EAAST,KAAKU,EAAE,+BAAgC,mBAC1D,MAEA,QAASD,EAAUT,KAAKU,EAAE,mCAAoC,eAG/D,OAAOD,EAxHRE,OAAOC,QAAQC,QAAU,SAAWC,EAAMC,EAAIC,EAAMC,GAEnD,IAIIC,EAJAC,EAAWd,MAAMe,IAAK,2BACzBC,EAAYhB,MAAMe,IAAK,6BACvBE,EAAYjB,MAAMe,IAAK,6BAIxB,OAAQN,GAEP,IAAK,MACJI,EAAS,OACV,MAEA,IAAK,OACL,IAAK,SACL,IAAK,WACJA,EAAS,MACV,MAEA,IAAK,SACJA,EAAS,SACV,MAEA,QACCA,EAAS,MAGX,IAAIK,EAAM,uCACVC,EAAO,CAENN,OAAQA,EACRO,QAAS,CACRC,cAAiB,SAAWC,KAAMN,EAAW,IAAMC,GACnDM,eAAgB,oBAEjBC,KAAM,OACNC,MAAO,WACPC,YAAa,QAGVhB,IAAOQ,GAAO,IAAIR,KAClBC,IAASQ,EAAKR,KAAOgB,KAAKC,UAAWjB,IAEzCV,IAAI4B,KAAM,QAAQf,IAASI,KAE3BY,MAAMhB,EAASI,EAAKC,GACnBY,MAAK,SAASC,GAEd,GAAIA,EAASC,GASZ,OADAhC,IAAI4B,KAAM,eACHG,EAASE,OATA,CAEhBjC,IAAIkC,KAAK,gBAAgBH,EAASI,YAAYJ,EAASK,cACvD,IAAIC,EAASpC,kBAAmB8B,EAASI,QACzC,MAAMG,MAAO,GAAGP,EAASI,UAAUE,SAQlCP,MAAK,SAAS5B,GAEhB,IAAIqC,EAAQb,KAAKc,MAAMtC,GAEA,SAAnBqC,EAAc,QAEjB1C,OAAO4C,aACN/C,KAAKU,EAAE,8BAA+B,sBACtCV,KAAKU,EAAE,6BAA8B,uCAGtCJ,IAAI0C,MAAOH,EAAe,UAI1B5B,EAAUH,EAAMC,EAAIC,EAAM6B,MAGzBI,OAAO,SAAUD,GAEnB1C,IAAI0C,MAAMA,GAEV7C,OAAO4C,aACN/C,KAAKU,EAAE,gCAAiC,gBACxCV,KAAKU,EAAE,+BAAgC,iCAAmC,MAAMS,IAASI,QAAUyB","file":"../fetch.min.js","sourcesContent":["'use strict'\n\nconst i18n = require( './i18n.min' )\n\nconst { remote }\t= require( 'electron' )\nconst dialog\t\t= remote.dialog\nconst Store\t\t\t= require( 'electron-store' )\nconst store\t\t\t= new Store()\nconst log\t\t\t= require( 'electron-log' )\n\n\nmodule.exports.apiCall = function ( call, id, body, callback ) {\n\t\n\tlet server \t\t= store.get( 'loginCredentials.server' ),\n\t\tusername \t= store.get( 'loginCredentials.username' ),\n\t\tpassword \t= store.get( 'loginCredentials.password' )\n\t\t\n\tlet method\n\t\n\tswitch( call ) {\n\t\t\n\t\tcase 'new':\n\t\t\tmethod = 'POST'\n\t\tbreak\n\t\t\n\t\tcase 'save':\n\t\tcase 'update':\n\t\tcase 'category':\n\t\t\tmethod = 'PUT'\n\t\tbreak\n\t\t\n\t\tcase 'delete':\n\t\t\tmethod = 'DELETE'\n\t\tbreak\n\t\t\n\t\tdefault: // = all, single or export\n\t\t\tmethod = 'GET'\n\t}\n\t\n\tlet url = '/index.php/apps/notes/api/v0.2/notes',\n\tinit = {\n\t\t\n\t\tmethod: method,\n\t\theaders: {\n\t\t\t'Authorization': 'Basic ' + btoa( username + ':' + password ),\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tmode: 'cors',\n\t\tcache: 'no-cache',\n\t\tcredentials: 'omit'\n\t}\n\t\n\tif( id ) { url += `/${id}` }\n\tif( body ) { init.body = JSON.stringify( body ) }\n\t\n\tlog.info( `URL: ${server}${url}` )\n\t\n\tfetch(server + url, init)\n\t.then(function(response) {\n\t\t\n\t\tif(!response.ok) {\n\t\t\t\n\t\t\tlog.warn(`fetch error: ${response.status} - ${response.statusText}`)\n\t\t\tlet errTxt = parseErrorMessage( response.status )\n\t\t\tthrow Error( `${response.status} ${errTxt}` )\n\t\t\t\n\t\t} else {\n\t\t\n\t\t\tlog.info( `response ok` )\n\t\t\treturn response.text()\n\t\t}\n\t\n\t}).then(function(message) {\n\t\t\n\t\tlet notes = JSON.parse(message)\n\t\t\n\t\tif (notes['status'] == 'error') {\n\t\t\t\n\t\t\tdialog.showErrorBox(\n\t\t\t\ti18n.t('app:dialog.error.json.title', 'JSON parsing error'),\n\t\t\t\ti18n.t('app:dialog.error.json.text', 'An error occured parsing the notes')\n\t\t\t)\n\t\t\t\n\t\t\tlog.error( notes['message'] )\n\t\t\n\t\t} else {\n\t\t\t\n\t\t\tcallback( call, id, body, notes )\n\t\t}\n\t\n\t}).catch( function( error ) {\n\t\t\n\t\tlog.error(error)\n\t\t\n\t\tdialog.showErrorBox(\n\t\t\ti18n.t('app:dialog.error.server.title', 'Server error'),\n\t\t\ti18n.t('app:dialog.error.server.text', 'there was an error retrieving') + `:\\n${server}${url}\\n\\n${error}`\n\t\t)\n\t})\n}\n\n\n\nfunction parseErrorMessage( message ) {\n\t\n\tlet errMsg\n\t\n\tswitch( message ) {\n\t\t\n\t\tcase 400: errMsg = i18n.t('app:dialog.error.message.400', 'Bad Request')\n\t\tbreak\n\t\tcase 401: errMsg = i18n.t('app:dialog.error.message.401', 'Unauthorized')\n\t\tbreak\n\t\tcase 403: errMsg = i18n.t('app:dialog.error.message.403', 'Forbidden')\n\t\tbreak\n\t\tcase 404: errMsg = i18n.t('app:dialog.error.message.404', 'Not Found')\n\t\tbreak\n\t\tcase 500: errMsg = i18n.t('app:dialog.error.message.500', 'Internal Server Error')\n\t\tbreak\n\t\tcase 501: errMsg = i18n.t('app:dialog.error.message.501', 'Not Implemented')\n\t\tbreak\n\t\tcase 502: errMsg = i18n.t('app:dialog.error.message.502', 'Bad Gateway')\n\t\tbreak\n\t\tcase 503: errMsg = i18n.t('app:dialog.error.message.503', 'Service Unavailable')\n\t\tbreak\n\t\tcase 504: errMsg = i18n.t('app:dialog.error.message.504', 'Gateway Timeout')\n\t\tbreak\n\t\t\n\t\tdefault: errMsg =  i18n.t('app:dialog.error.message.default', 'Unspecified')\n\t}\n\t\n\treturn errMsg\n}\n"]}