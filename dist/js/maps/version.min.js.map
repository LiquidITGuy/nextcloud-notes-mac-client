{"version":3,"names":[],"mappings":"","sources":["version.js"],"sourcesContent":["'use strict'\n\nconst i18n\t\t\t\t= require( './i18n.min' )\nconst version \t\t\t= require('electron').remote.app.getVersion()\nconst compareVersions\t= require('compare-versions')\nconst $\t\t\t\t\t= require( 'jquery' )\nconst log\t\t\t\t= require( 'electron-log' )\n\n\nmodule.exports.appVersion = function( callback ) {\n\t\n\t$.getJSON( 'https://api.github.com/repos/dgmid/nextcloud-notes-mac-client/releases/latest', function( release ) {\n\t\t\n\t\tlet latest = release.name\n\t\t\n\t\tlog.info( `this version: ${version}` )\n\t\tlog.info( `latest version: ${latest}` )\n\t\t\n\t\tif( compareVersions.compare( version, latest, '<' ) ) {\n\t\t\t\n\t\t\tcallback( `<button id=\"update\" class=\"fadein\" type=\"button\" tabindex=\"-1\" data-url=\"https://www.midwinter-dg.com/mac-apps/nextcloud-notes-client.html?app\"><span id=\"update-version\">${latest}</span> <span id=\"update-label\">${i18n.t('app:titlebar.update', 'Update Available')}</span> &rarr;</button>` )\n\t\t}\n\t\t\n\t\tif( compareVersions.compare( version, latest, '>' ) ) {\n\t\t\t\t\n\t\t\tif( version.includes('-a') ) {\n\t\t\t\t\n\t\t\t\tcallback( `<span id=\"dev\" class=\"α fadein\">DEV: v${version}</span>` )\n\t\t\t\t\n\t\t\t} else if ( version.includes('-b') ) {\n\t\t\t\t\n\t\t\t\tcallback( `<span id=\"dev\" class=\"β fadein\">DEV: v${version}</span>` )\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tcallback( `<span id=\"dev\" class=\"fadein\">DEV: v${version}</span>` )\n\t\t\t}\n\t\t}\n\t})\n\t.done( function() {\n\t\t\n\t\tlog.info( `check release succeeded` )\n\t})\n\t.fail( function( jqXHR, textStatus, errorThrown ) {\n\t\t\n\t\tlog.error( `check release failed ${textStatus}` )\n\t})\n\t.always( function() {\n\t\t\n\t\tlog.info( `check release ended` )\n\t})\n}\n"],"file":"../version.min.js"}