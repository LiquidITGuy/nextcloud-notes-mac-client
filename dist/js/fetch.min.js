"use strict";const i18n=require("./i18n.min"),{remote:remote}=require("electron"),dialog=remote.dialog,Store=require("electron-store"),store=new Store,log=require("electron-log");let server=store.get("loginCredentials.server"),username=store.get("loginCredentials.username"),password=store.get("loginCredentials.password");exports.apiCall=function(e,r,o,t){let s;switch(e){case"new":s="POST";break;case"save":case"update":case"category":s="PUT";break;case"delete":s="DELETE";break;default:s="GET"}let n="/index.php/apps/notes/api/v0.2/notes",a={method:s,headers:{Authorization:"Basic "+btoa(username+":"+password),"Content-Type":"application/json"},mode:"cors",cache:"no-cache",credentials:"omit"};r&&(n+=`/${r}`),o&&(a.body=JSON.stringify(o)),log.info(`URL: ${server}${n}`),fetch(server+n,a).then((function(e){if(e.ok)return log.info("response ok"),e.text();throw log.warn("fetch error"),console.table(e),Error(e.status)})).then((function(s){let n=JSON.parse(s);"error"==n.status?(dialog.showErrorBox(i18n.t("app:dialog.error.json.title","JSON parsing error"),i18n.t("app:dialog.error.json.text","An error occured parsing the notes")),log.error(n.message)):t(e,r,o,n)})).catch((function(e){dialog.showErrorBox(i18n.t("app:dialog.error.server.title","Server error"),i18n.t("app:dialog.error.server.text","there was an error retrieving")+`:\n${n}\n\n${e}`),log.error(e)}))};
//# sourceMappingURL=maps/fetch.min.js.map
