"use strict";const i18n=require("./i18n.min"),{remote:remote}=require("electron"),dialog=remote.dialog,Store=require("electron-store"),store=new Store,log=require("electron-log");function parseErrorMessage(e){let r;switch(e){case 400:r=i18n.t("app:dialog.error.message.400","Bad Request");break;case 401:r=i18n.t("app:dialog.error.message.401","Unauthorized");break;case 403:r=i18n.t("app:dialog.error.message.403","Forbidden");break;case 404:r=i18n.t("app:dialog.error.message.404","Not Found");break;case 500:r=i18n.t("app:dialog.error.message.500","Internal Server Error");break;case 501:r=i18n.t("app:dialog.error.message.501","Not Implemented");break;case 502:r=i18n.t("app:dialog.error.message.502","Bad Gateway");break;case 503:r=i18n.t("app:dialog.error.message.503","Service Unavailable");break;case 504:r=i18n.t("app:dialog.error.message.504","Gateway Timeout");break;default:r=i18n.t("app:dialog.error.message.default","Unspecified")}return r}module.exports.apiCall=function(e,r,a,o){let t,s=store.get("loginCredentials.server"),i=store.get("loginCredentials.username"),n=store.get("loginCredentials.password");switch(e){case"new":t="POST";break;case"save":case"update":case"category":t="PUT";break;case"delete":t="DELETE";break;default:t="GET"}let l="/index.php/apps/notes/api/v0.2/notes",g={method:t,headers:{Authorization:"Basic "+btoa(i+":"+n),"Content-Type":"application/json"},mode:"cors",cache:"no-cache",credentials:"omit"};r&&(l+=`/${r}`),a&&(g.body=JSON.stringify(a)),log.info(`URL: ${s}${l}`),fetch(s+l,g).then((function(e){if(e.ok)return log.info("response ok"),e.text();{log.warn(`fetch error: ${e.status} - ${e.statusText}`);let r=parseErrorMessage(e.status);throw Error(`${e.status} ${r}`)}})).then((function(t){let s=JSON.parse(t);"error"==s.status?(dialog.showErrorBox(i18n.t("app:dialog.error.json.title","JSON parsing error"),i18n.t("app:dialog.error.json.text","An error occured parsing the notes")),log.error(s.message)):o(e,r,a,s)})).catch((function(e){log.error(e),dialog.showErrorBox(i18n.t("app:dialog.error.server.title","Server error"),i18n.t("app:dialog.error.server.text","there was an error retrieving")+`:\n${s}${l}\n\n${e}`)}))};
//# sourceMappingURL=maps/fetch.min.js.map
